# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pr:
  autoCancel: true
  branches:
    include: 
     - "*"
  drafts: true

parameters:
  - name: platforms
    type: object
    default:
      - name: windows
        vmImage: windows-2019
      - name: linux
        vmImage: ubuntu-latest
      - name: mac
        vmImage: macOS-latest
  - name: bazel_args
    default: ' '

jobs:
  - ${{ each platform in parameters.platforms }}:
      - job: ${{ platform.name }}
        pool:
          vmImage: ${{ platform.vmImage }}

        steps:
          - bash: |
              if [[ '${{platform.name}}' == 'windows' ]]; then
                export CI_EXEC='cmd';
                git config --system core.longpaths true
              else
                export CI_EXEC='bash';
              fi
              .ci/init.sh
            displayName: 'CI Init'
            env:
              BUILDBUDDY_API_KEY: $(BUILDBUDDY_API_KEY)

          - script: |
              bash tests/runall.sh
            displayName: 'Build & Test'
            env:
              BAZEL_ARGS: ${{parameters.bazel_args}}

          - script: |
              bash .ci/tar.sh
            displayName: 'tar outputs'
            condition: always()

          - publish: bazel-out.tar.gz
            artifact: ${{ platform.name }}-bazel-out
            condition: always()

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/test.xml'
              searchFolder: '$(System.DefaultWorkingDirectory)/bazel-testlogs'
              failTaskOnFailedTests: true
              buildPlatform: '${{ platform.name }}'
              testRunTitle: '${{ platform.name }}'
              publishRunAttachments: true
            condition: always()
