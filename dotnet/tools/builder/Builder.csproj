<Project>
  <PropertyGroup Condition="$(_IsBootstrapping) == 'true'">
    <BINDIR>$(MSBuildStartupDirectory)/$(BINDIR)</BINDIR>
    <ExecRoot>$(MSBuildStartupDirectory)</ExecRoot>
    <RestoreConfigFile>$(MSBuildStartupDirectory)/$(RestoreConfigFile)</RestoreConfigFile>
    <AssemblyName>builder</AssemblyName>
  </PropertyGroup>

  <Import Project="$(ExecRoot)/external/dotnet_sdk/Directory.Bazel.props" Condition="$(_IsBootstrapping) == 'true'" />
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <PropertyGroup>
    <PublishDir Condition="$(_IsBootstrapping) == 'true'">$(BINDIR)/external/dotnet_sdk/publish</PublishDir>
    <TargetFramework>net5.0</TargetFramework>
    <!--  Hack to detect when we're testing internally: Package will be dotnet/tools/builder when internal, but '' when
      external as part of the sdk. -->
<!--    <TargetFramework Condition="$(_IsBootstrapping) != 'true'">netcoreapp3.1</TargetFramework>-->
    <OutputType>Exe</OutputType>
    <LangVersion>9.0</LangVersion>
    <NoWarn>$(NoWarn);NU1603</NoWarn>
    <Nullable>enable</Nullable>
    <RootNamespace>RulesMSBuild.Tools.Builder</RootNamespace>
    <NoWarn>$(NoWarn);CS8618</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Locator" Version="1.4.1" />
    <PackageReference Include="SamHowes.Microsoft.Build" Version="16.9.0" ExcludeAssets="Runtime" GeneratePathProperty="true" />
    <!--  Make sure msbuild only copies this exact dll and no dependencies.  -->
    <None Include="$(PkgSamHowes_Microsoft_Build)/lib/**/*.dll">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="16.9.0" ExcludeAssets="Runtime" />
    <PackageReference Include="CommandLineParser" Version="2.9.0-preview1" />
  </ItemGroup>
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
</Project>
